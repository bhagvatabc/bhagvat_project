from django.shortcuts import render

# Create your views here.
from django.core import serializers
from django.http import HttpResponse
from django.shortcuts import render
from django.shortcuts import render_to_response
from myapp.models import *
import myapp.views
from myapp.views import *
import json
import simplejson
import json as simplejson
#import pyotp
import os
import sys
from urllib2 import urlopen, HTTPError
import urllib
from urllib2 import Request, urlopen, URLError
import requests
from requests import *
#from django.http import JsonResponse
def hello(request,id):
     a=5
     b=6
     if(a==5):
       return HttpResponse(id)
     if(b==6):
       return HttpResponse("welcome")
    #return ('test.html')

def detaill(request,store_id,message):

 mobile_number = request.GET.get('', store_id)
 #message = "Hello User, we are sorry that you faced issues with payments. It is resolved in our new update https://goo.gl/sX2Be5 #Letscontree"
 message =request.GET.get('', message)
 a= str(mobile_number)
 print message
 url = ("http://alerts.solutionsinfini.com/api/v3/index.php?method=sms&api_key=A2da30c3f0e3f933485c8a7545dcaf895&to="+mobile_number+"&sender=Contri&message="+message)
#os.system('php -f url')
 t =requests.get(url)
 print t.text
 print "messsage sent"
 return HttpResponse("message sent on this number"+ " " +a)

def detaill2(request,store_id,message):
    mobile_number = request.GET.get('', store_id)
    message =request.GET.get('', message)
    print mobile_number
    print message
    d ={'mobile_number':mobile_number,'message':message}
    a= json.dumps(d)
    return HttpResponse(a)
def test(request,store_id):
  mobile_number = request.GET.get('', store_id)

  url= "http://52.66.113.94:7000/myapp/sendi/"+mobile_number
  t =requests.get(url)
  if(t.ok):
   print t.text
   print t.headers
   return HttpResponse(t,content_type="application/json" )  
  else:
   return HttpResponse(".raise_for_status()") 
  #  data=  User.objects.all()
   #for i in data:
  #ans_data={
 # "user_detail":data
 
    #print data.name
#    return HttpResponse(serializers.serialize("json", [User.objects.get(p_id=25)]))

#def expenseparticipent(request,user_data):
def detaill3(request,store_id):
  d= Expenseparticipants.objects.raw('SELECT * FROM Expenseparticipants WHERE participant = %s', [store_id])
 # return HttpResponse(serializers.serialize("json",d))
  d1=serializers.serialize("json",d,fields=('id','share','object','_created_at','_id','settled','_updated_at','participantname','participant','saved'))
  print len(d1)
  print "first"+d1
#  if(len(d1)==2)

  d2 = json.loads(d1)
  obj_data = (d2[0]["fields"]["object"])
  print obj_data
  c1= json.loads(json.dumps(d2[0]))
 # return HttpResponse("json.dumps(c2),content_type=application/json")

  if(obj_data!='other'):
    # if(p1 ==store_id):

   d3 = Runningexpenses.objects.raw('SELECT * FROM Runningexpenses WHERE id1 =%s', [obj_data])
 #  d3 =Runningexpenses.objects.filter(id1=obj_data)
   d4=serializers.serialize("json",d3,fields=('id','saved','agenda','name','contreemoney','date','_updated_at','_created_at','id1'))
   print "second"+d4
   if(len(d4)==2):
    d9={'Expenseparticipants':c1}
    fd=(json.dumps(d9,indent=2))
    return HttpResponse(fd, content_type="application/json")
   else:
    d5 = json.loads(d4)
    obj_data1 = (d5[0]["fields"]["id1"])
    c2=json.loads(json.dumps(d5[0]))
    d9={'Expenseparticipants':c1,'Runningexpenses':c2}
#    fd=(json.dumps(d9,indent=2))
 #   return HttpResponse(fd, content_type="application/json")

    t1=Updatelist.objects.raw('SELECT * FROM Updatelist WHERE object =%s', [obj_data])
    t2=serializers.serialize("json",t1,fields=('id','wperm','id1','object','updated_at','created_at','dist','type','expenseid'	,'new_val','rperm','acl','date','old_val'))
    print "updatelist"+ t2
    if(len(t2)==2 and obj_data1!=obj_data):
     d9={'Expenseparticipants':c1,'Runningexpenses':c2}
     fd=(json.dumps(d9,indent=2))
     return HttpResponse(fd, content_type="application/json")
    else:
      if(len(t2)!=2):
       t3=json.loads(t2)
       t4=json.loads(json.dumps(t3[0]))
       d9={'Expenseparticipants':c1,'Runningexpenses':c2,'Updatelist':t4}
      else:
        t4=t2
   
   #  fd=(json.dumps(d9,indent=2))
   #  return HttpResponse(fd, content_type="application/json")


  #return HttpResponse(json.dumps(c2),content_type="application/json")
     
   if(obj_data1== obj_data):
    d6 =Expensedetails.objects.filter(object = obj_data1) 
    d7=serializers.serialize("json",d6,fields=('id','_created_at','_id','description','_amount','_updated_at','object','addedby','shares','persons','distribution','own'))
    print "thrd"+d7
    if(len(d7)==2):
      if(len(t2)!=2):
        d9={'Expenseparticipants':c1,'Runningexpenses':c2,'Updatelist':t4}
        fd=(json.dumps(d9,indent=2))
        return HttpResponse(fd, content_type="application/json")
      else:   
         d9={'Expenseparticipants':c1,'Runningexpenses':c2}
         fd=(json.dumps(d9,indent=2))
         return HttpResponse(fd, content_type="application/json")

    else:
       if(len(t2)!=2):
     #d9 = {'Expenseparticipants':c1,'Runningexpenses':c2,'Expensedetails.':c3}
        d8 = json.loads(d7)
        c3=json.loads(json.dumps(d8[0]))
        d9 ={'Expenseparticipants':c1,'Runningexpenses':c2,'Expensedetails.':c3,'Updatelist':t4}
        fd=(json.dumps(d9,indent=2))
        return HttpResponse(fd, content_type="application/json")
       else:
           d8 = json.loads(d7)
           c3=json.loads(json.dumps(d8[0]))

           d9 ={'Expenseparticipants':c1,'Runningexpenses':c2,'Expensedetails.':c3}
           fd=(json.dumps(d9,indent=2))
           return HttpResponse(fd, content_type="application/json")

def API2(request,mob_number):
  v= str(mob_number)+':'
  t2 =Expensedetails.objects.filter(persons =v).order_by('-updated_at')     # - sign indicate that showing data  would be descending order of this particular field
  c=len(t2)
  print c  
 # t2=Expensedetails.objects.raw(' select * from Expensedetails where exists(select persons from Expensedetails where persons = %s',[v])
 # t2=Expensedetails.objects.raw('select * from Expensedetails where persons = %s',[v]+"order by updated_at desc")
 # print t2
  t2=serializers.serialize("json",t2)
  l=len(t2)
  print l
  d=json.loads(t2)
  exp_obj=d[0]['fields']['object']
  print "object" +" "+exp_obj
  data1=[]
  for i in d:
   
    data1.append(i['fields']['id1'])
  
  a=[x.encode("utf-8")for x in data1]   # remeber this statement in future to encoding 
  print a
  k=len(a)
  print k
  c1=json.loads(json.dumps(d))
  for j in a:
  #  print j
 # c1=(json.dumps(d,indent=2))
 # return HttpResponse(fd, content_type="application/json")
    t3 =Updatelist.objects.filter(expenseid=j)
    print "j"+j
    t4=serializers.serialize("json",t3)


    print "array"+t4

    if(len(t4)==2):
    
     # continue
     d3={"expensedetails":c1}
     fd = (json.dumps(d3,indent=2))
    # t4=serializers.serialize("json",d3)
  #   return HttpResponse(fd,content_type="application/json")
    else:
#      t4=serializers.serialize("json",t3)
      d5 =json.loads(t4)
      c2=json.dumps(d5)
      d6={"expensedetails":c1,"updatelist":c2}
      fd=json.dumps(d6,indent=2)
   #   return HttpResponse(fd,content_type="application/json")
    if (exp_obj=="other"):
    #  exp_data =Expensedetails.objects.filter( object= d_obj)
     # exp_data=serializers.serialize("json",exp_data)
     # d = json.loads(exp_data)
     # c3= json.loads(json.dumps(d))

     # return HttpResponse(exp_data,content_type="application/json" )  
      mo_no= mob_number  
      print "mob_number" +mo_no
      exp_data =Expensedetails.objects.filter(owner = mo_no)
     # print exp_data
      exp_data=serializers.serialize("json",exp_data)
#      print exp_data

     # d = json.loads(exp_data)
     #  exp_id=d[0]["field"]["id1"]

      if(len(exp_data)==2):
     
       
      
         d5 =json.loads(t4)#############
         c2=json.dumps(d5)#############
 
p         d7 = {"expensedetails1":c1,"updatelist":c2}#,"expensedetails2":c3}
         fd=json.dumps(d7,indent=2)

         return HttpResponse(fd,content_type="application/json")
      else:
       if(len(exp_data)!=2):
        
         d=json.loads(exp_data)
         exp_id=d[0]["fields"]["id1"]
         d5 =json.loads(t4)###############
         c2=json.loads(json.dumps(d5))##############
         c3= json.loads(json.dumps(d))
         d8=  {"expensedetails1":c1,"expensedetails2":c3,"updatelist":c2}
         updl_data =Updatelist.objects.filter(expenseid=exp_id)
         updl_data=serializers.serialize("json",updl_data)
         print "updl_data"+updl_data
         if(len(updl_data)==2):  
           fd=json.dumps(d8,indent=2)
           return HttpResponse(fd,content_type="application/json")
         else:
           if(len(exp_data)!=2):
             d = json.loads(updl_data)
             c4= json.loads(json.dumps(d))
             print "gggggggggggggggg"
             d8=  {"expensedetails1":c1,"expensedetails2":c3,"updatelist1":c2,"Updatelist2":c4}
             fd=json.dumps(d8,indent=2)
             return HttpResponse(fd,content_type="application/json")

             
        
           # d9=  {"Updatelist":c4} 
       

       

        
   
